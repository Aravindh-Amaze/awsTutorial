AWSTemplateFormatVersion: '2010-09-09'

Description: awsTutorial(2, Cognito Basic)
Resources:
  awsTutorialCognitoAuthRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: awsTutorial_Cognito_Auth_Role
      Description: Role for AWS Cognito Identity Auth
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action:
              - sts:AssumeRoleWithWebIdentity
              - sts:TagSession
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref awsTutorialCognitoIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
      Policies:
        - PolicyName: awsTutorial_Cognito_Auth_Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: GameLiftBasic
                Effect: Allow
                Action:
                  - gamelift:SearchGameSessions
                  - gamelift:CreateGameSession
                  - gamelift:CreatePlayerSession
                Resource: !Join
                  - ''
                  - - 'arn:aws:gamelift:'
                    - !Ref AWS::Region
                    - ':'
                    - ':alias/'
                    - '*'
      Tags:
        - Key: Usage
          Value: Youtube Streamer
  awsTutorialCognitoUnauthRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: awsTutorial_Cognito_Unauth_Role
      Description: Role for AWS Cognito Identity Unauth
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: cognito-identity.amazonaws.com
            Action:
              - sts:AssumeRoleWithWebIdentity
              - sts:TagSession
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref awsTutorialCognitoIdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: unauthenticated
      Policies:
        - PolicyName: awsTutorial_Cognito_Unauth_Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: DenyAll
                Effect: Deny
                Action: '*'
                Resource: '*'
      Tags:
        - Key: Usage
          Value: Youtube Streamer
  awsTutorialCognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      IdentityPoolName: awsTutorial_Cognito_Identity_Pool
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId: !Ref awsTutorialCognitoUserPoolClient
          ProviderName: !GetAtt awsTutorialCognitoUserPool.ProviderName
          ServerSideTokenCheck: true
  awsTutorialCognitoIdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref awsTutorialCognitoIdentityPool
      Roles:
        unauthenticated: !GetAtt awsTutorialCognitoUnauthRole.Arn
        authenticated: !GetAtt awsTutorialCognitoAuthRole.Arn
  awsTutorialCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: awsTutorial_Cognito_User_Pool
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
        - email
        - preferred_username
      AutoVerifiedAttributes:
        - email
      DeletionProtection: INACTIVE
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      MfaConfiguration: 'OFF'
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate:
          - email
      UsernameConfiguration:
        CaseSensitive: true
      UserPoolAddOns:
        AdvancedSecurityMode: 'OFF'
      UserPoolTags:
        Usage: Youtube Streamer
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
  awsTutorialCognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: awsTutorial_Cognito_User_Pool_Client
      AccessTokenValidity: 60
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthFlowsUserPoolClient: false
      AuthSessionValidity: 3
      EnablePropagateAdditionalUserContextData: false
      EnableTokenRevocation: true
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: true
      IdTokenValidity: 60
      PreventUserExistenceErrors: ENABLED
      RefreshTokenValidity: 30
      SupportedIdentityProviders:
        - COGNITO
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days
      UserPoolId: !Ref awsTutorialCognitoUserPool
Metadata:
  AWS::Composer::Groups:
    Group:
      Label: Cognito
      Members:
        - awsTutorialCognitoIdentityPool
        - awsTutorialCognitoUserPool
        - awsTutorialCognitoUserPoolClient
Outputs:
  awsTutorialRegion:
    Description: AWS Region
    Value: !Ref AWS::Region
  awsTutorialCognitoIdentityPoolId:
    Description: Cognito Identity Pool ID
    Value: !Ref awsTutorialCognitoIdentityPool
  awsTutorialCognitoUserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref awsTutorialCognitoUserPool
  awsTutorialCognitoUserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref awsTutorialCognitoUserPoolClient